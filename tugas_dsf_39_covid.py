# -*- coding: utf-8 -*-
"""Tugas DSF 39 - COVID

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AshDPblVFXk22aES5N62fWRsF0zQbVUs

## Investigasi sampel data titanic berikut dengan cara :
1. Cek secara head, tail, sample, info lalu observasi apa yang bisa anda peroleh ?
2. Lakukan Statistical Summary dengan mengekstrak informasi yang didapat dari observasi anda ?
3. Cek apakah ada duplikat dan bagaimana handlenya ?
4. Cek apakah ada missing value, berapa persentasenya jika ada, dan bagaimana cara handlenya ?

## Import Libraries
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
pd.set_option("display.max_columns", None)
pd.set_option("display.max_rows", None)

"""##Load Data"""

#import data
import pandas as pd

df=pd.read_excel('Data_Covid.xlsx')
data = df.copy()

"""##Preliminary"""

# Menampilkan 5 data teratas
data.head()

# Menampilkan 5 data terbawah
data.tail()

# Menampilkan 5 random sampel dari data
data.sample(5)

#Menampilkan info dari data
data.info()

"""##Statistical Summary




"""

#Melihat kolom apa saja yang ada pada excel
data.columns

# Mengelompokkan kolom berdasarkan tipe data
categoricals = ['name', 'sex', 'hospitalized', 'comorbidity']
numericals = ['age', 'tested_positive']

#Menampilkan statistical summary dari data numerik
data[numericals].describe()

#Menampilkan categorical summary dari data kategori
data[categoricals].describe()

#Menampilkan detail dari data numerik
for col in numericals:
  print(data[col].value_counts())

#Menampilkan detail dari data kategori
for col in categoricals:
  print(data[col].value_counts())



"""##Data Cleansing

Duplicated Data
"""

len(data)

# Memeriksa apakah ada duplikasi
print(df.duplicated().sum())

len(data.drop_duplicates())/ len(data)

duplicates = data[data.duplicated(keep=False)]
duplicates = duplicates.sort_values(by=list(data.columns))
display(duplicates)

# Menghapus baris duplikasi
df = df.drop_duplicates()

# Memastikan duplikasi telah dihapus
print(df.duplicated().sum())

"""Handling Duplicates"""

dup_count = duplicates.groupby(list(data.columns)).size().reset_index(name = "duplicates count")

sorted_duplicates=dup_count.sort_values(by = ['duplicates count'], ascending = False)

sorted_duplicates

data = data.drop_duplicates()

len(data)

len(df.drop_duplicates())/ len(data)

"""Null Values"""

#Melihat Jumlah Value null untuk setiap kolom
data.isna().sum()

#Melihat Jumlah Value null untuk setiap kolom
data.isnull().sum()

"""Fill Null Values"""

print(data['age'].dtype)
print(data['age'].median())

# Mengisi nilai yang hilang dengan median hanya untuk kolom numerik
for column in data.select_dtypes(include=['number']).columns:
    data[column] = data[column].fillna(data[column].median())

#Melihat Jumlah Value null untuk setiap kolom
data.isna().sum()

"""##Info Data Final"""

#Menampilkan info data setelah proses handling duplicates
data.info()

"""##VISUALISASI DATA"""

# Histogram Usia
plt.figure(figsize=(10, 6))
sns.histplot(df['age'], bins=30, kde=True, color='#69b3a2')
plt.title('Distribusi Usia Pasien', fontsize=16)
plt.xlabel('Usia')
plt.ylabel('Jumlah Pasien')
plt.grid(True)
plt.show()

# Pie Chart Status Positif Covid
import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_excel('/content/Data_Covid.xlsx')

jumlah = df['tested_positive'].value_counts()
proporsi = df['tested_positive'].value_counts(normalize=True)

labels = [
    f'Positif COVID\n{jumlah[1]} orang ({proporsi[1]*100:.1f}%)',
    f'Negatif COVID\n{jumlah[0]} orang ({proporsi[0]*100:.1f}%)'
]

colors = ['#ff6961', '#77dd77']
explode = (0.05, 0)

plt.figure(figsize=(7, 7))
plt.pie(jumlah, labels=labels, autopct='', startangle=90, colors=colors, explode=explode)
plt.title('Proporsi & Jumlah Pasien Positif vs Negatif COVID-19')
plt.axis('equal')
plt.show()

# Barplot Rawat Inap berdasarkan Jenis Kelamin
# Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_excel('/content/Data_Covid.xlsx')
rawat_inap_gender = df.groupby(['sex', 'hospitalized']).size().unstack(fill_value=0)

rawat_inap_gender.columns = ['Tidak Dirawat Inap', 'Dirawat Inap']
rawat_inap_gender.index.name = 'Jenis Kelamin'

sns.set(style='whitegrid')
colors = ['#4DA6FF', '#FFA07A']

ax = rawat_inap_gender.plot(kind='bar', figsize=(9, 6), color=colors, edgecolor='black')

plt.title('ðŸ“Š Jumlah Pasien Rawat Inap Berdasarkan Jenis Kelamin', fontsize=14, weight='bold')
plt.xlabel('Jenis Kelamin', fontsize=12)
plt.ylabel('Jumlah Pasien', fontsize=12)
plt.xticks(rotation=0)
plt.legend(title='Status Rawat Inap')
plt.tight_layout()

for container in ax.containers:
    ax.bar_label(container, label_type='edge', padding=3, fontsize=10)
plt.show()

# Barplot Komorbiditas
plt.figure(figsize=(10, 6))
sns.countplot(y='comorbidity', data=df, order=df['comorbidity'].value_counts().index, palette='coolwarm')
plt.title('Distribusi Komorbiditas Pasien', fontsize=16)
plt.xlabel('Jumlah Pasien')
plt.ylabel('Jenis Komorbiditas')
plt.grid(axis='x')
plt.show()

# Heatmap Korelasi
plt.figure(figsize=(6, 4))
sns.heatmap(df[['age', 'tested_positive']].corr(), annot=True, cmap='YlGnBu', fmt=".2f")
plt.title('Korelasi antar Variabel Numerik')
plt.show()

# Menyimpan data ke file CSV
data.to_csv('hasil_analisis_covid.csv', index=False)

# Menyimpan data ke file Excel
data.to_excel('hasil_analisis_covid.xlsx', index=False)